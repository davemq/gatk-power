/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.7/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

repositories {
    mavenLocal()
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven { url "https://artifactory.broadinstitute.org/artifactory/libs-snapshot/" }
}

dependencies {
    // Use JUnit test framework.
    testImplementation libs.junit

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api libs.commons.math3

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation libs.guava
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

//===================================================================
// build
//===================================================================
final nativeBuildDir = "$buildDir/native"

task cmakeConfig(type: Exec) {
    // hide stdout, but print stderr
    standardOutput = new ByteArrayOutputStream()
    doFirst {mkdir nativeBuildDir}
    workingDir nativeBuildDir
    commandLine 'cmake', '-Wno-dev', projectDir
    inputs.files fileTree(projectDir) {include '**/CMakeLists.txt'}.files
    outputs.files "$nativeBuildDir/Makefile"
}

task cmakeBuild(type: Exec) {
    // hide stdout, but print stderr
    standardOutput = new ByteArrayOutputStream()
    workingDir nativeBuildDir
    commandLine 'make', 'install', '-j', Runtime.runtime.availableProcessors()
    // always run this task
    outputs.upToDateWhen {false}
}

task copyNativeLib(type: Copy) {
    from nativeBuildDir
    into "$buildDir/classes/java/main/com/ibm/power/native"
    include '*.so'
    include '*.dylib'
}

compileJava.finalizedBy copyNativeLib
copyNativeLib.dependsOn cmakeBuild
jar.dependsOn copyNativeLib
javadoc.dependsOn copyNativeLib
// TODO: clean up dependencies using Gradle 7+ dependency mechanism
compileTestJava.dependsOn copyNativeLib
cmakeBuild.dependsOn cmakeConfig
test.dependsOn copyNativeLib
